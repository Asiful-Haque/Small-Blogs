React Lifecycle ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶ò‡¶æ‡¶ü‡¶æ‡¶ò‡¶æ‡¶ü‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶Ø‡ßá‡¶Ø‡¶º‡ßá useEffect ‡¶π‡ßÅ‡¶ï‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡ßç‡¶∞‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ‡•§üöÄ

‡¶§‡ßã ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶∞ ‡¶¶‡¶ø‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶¶‡ßá‡¶ñ‡¶≤‡¶æ‡¶Æ ‡¶Ø‡ßá React Lifecycle ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏‡¶ü‡¶æ ‡¶Æ‡ßÇ‡¶≤‡¶§ ‡¶π‡¶≤‡ßã ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶è‡¶ï‡¶ü‡¶æ React Component ‡¶§‡ßà‡¶∞‡ßÄ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßá‡¶∑ ‡¶ï‡¶ø‡¶Ç‡¶¨‡¶æ unmount ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶Ø‡¶æ ‡¶Ø‡¶æ ‡¶ß‡¶æ‡¶™ ‡¶™‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ ‡¶á‡•§
‡¶ß‡¶æ‡¶™‡¶ó‡ßÅ‡¶≤‡ßã ‡¶π‡¶≤‡ßã Mounting, Updating and, Unmounting.

‚ö†Ô∏è Class Components ‡¶è‡¶∞ ‡¶¨‡ßá‡¶≤‡¶æ‡¶Ø‡¶º life cycle ‡¶Æ‡ßá‡¶•‡¶°‡¶ó‡ßÅ‡¶≤‡ßã ‡¶π‡¶≤‡ßã ‡¶∏‡¶ø‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤ ‡¶ì‡¶Ø‡¶º‡¶æ‡¶á‡¶ú:
üî® Mounting:
1. constructor()
2. getDerivedStateFromProps()
3. render() - "The process of converting your code (JSX, HTML, etc.) into real DOM elements that are displayed in the browser."
‡¶è‡¶¨‡¶Ç render ‡¶π‡¶¨‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ø‡¶ñ‡¶® DOM ‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶π‡¶Ø‡¶º ‡¶§‡¶ñ‡¶® 
4. componentDidMount()

üîÑ Updating:
1. getDerivedStateFromProps()
2. render() - "The process of converting your code (JSX, HTML, etc.) into real DOM elements that are displayed in the browser."
3. componentDidUpdate() 
‡¶Ø‡¶¶‡¶ø‡¶ì ‡¶Ü‡¶∞‡ßã ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶õ‡ßá ‡¶Æ‡ßá‡¶•‡¶°‡•§

‚ùå Unmounting:
1. componentWillUnmount()

‡¶Ø‡¶¶‡¶ø‡¶ì ‡¶Æ‡¶°‡¶æ‡¶∞‡ßç‡¶® ‡¶ú‡¶æ‡¶≠‡¶æ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü‡ßá ‡¶è‡¶ñ‡¶® class component ‡¶è‡¶∞ ‡¶ö‡ßá‡¶Ø‡¶º‡ßá functional component ‡¶á ‡¶¨‡ßá‡¶∂‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶Ø‡¶º‡•§

‚ö†Ô∏è Functional component ‡¶è‡¶∞ ‡¶¨‡ßá‡¶≤‡¶æ‡¶Ø‡¶º life cycle ‡¶Æ‡ßá‡¶•‡¶°‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶ï‡¶æ‡¶ú‡¶á ‡¶π‡ßÅ‡¶ï ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶π‡¶Ø‡¶º ‡¶Ø‡ßá‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶¨‡¶≤‡ßç‡¶≤‡¶æ‡¶Æ‡•§ useEffect ‡¶π‡ßÅ‡¶ï‡•§
‡¶Ø‡ßá‡¶Æ‡¶®:-

‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶π‡¶Ø‡¶º rendering. ‡¶§‡¶æ‡¶∞‡¶™‡¶∞
üî® Mounting:
1.
useEffect(() => {
 console.log("Component Mounted");
}, []);
‡¶è‡¶ü‡¶ø DOM ‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶π‡¶≤‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡¶á ‡¶π‡ßÅ‡¶ï‡¶ü‡¶ø ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡ßá‡•§

üîÑ Updating:
1.
useEffect(() => {
 console.log("Component Updated");
});
‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶ï‡¶ø‡¶Ç‡¶¨‡¶æ ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡¶™‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶≤‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶π‡ßÅ‡¶ï‡¶ü‡¶ø ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá‡•§

2.
const [count, setCount] = useState(0);
useEffect(() => {
 console.log("Count Updated:", count);
}, [count]); 
‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶ü‡¶æ ‡¶ö‡ßá‡¶û‡ßç‡¶ú ‡¶π‡¶≤‡ßá‡¶á ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶π‡ßÅ‡¶ï‡¶ü‡¶ø ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá‡•§

‚ùå Unmounting:
1.
useEffect(() => {
 return () => {
 console.log("Component Unmounted");
 };
}, []);

‡¶è‡¶§‡¶ü‡ßÅ‡¶ï‡ßÅ ‡¶ó‡ßá‡¶≤‡ßã ‡¶Æ‡ßÇ‡¶≤‡¶§ react lifecycle ‡¶è‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡¶æ‡¶∞‡¶ü‡¶æ‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶ì‡¶á ‡¶Ø‡ßá useEffect ‡¶π‡ßÅ‡¶ï‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ ‡¶∂‡¶ø‡¶ñ‡¶≤‡¶æ‡¶Æ ‡¶∏‡ßá‡¶ü‡¶æ ‡¶π‡¶≤‡ßã Unmounting ‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡ßá‡¶∞ cleanup function ‡¶ü‡¶æ‡•§

‚úÖ üî∏ Yes ‚Äî cleanup functions in useEffect do run when the component unmounts.

But ALSO...

üî∏ Cleanup runs before the effect runs again due to changes in dependencies.

‚ö†Ô∏è ‡¶¨‡ßá‡¶∂‡¶ø‡¶∞‡¶≠‡¶æ‡¶ó ‡¶∏‡¶Æ‡¶Ø‡¶º useEffect ‡¶ü‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶∞ API fetching ‡¶è‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶ï‡¶æ‡¶ú‡ßá ‡¶≤‡¶æ‡¶ó‡¶§‡ßã ‡¶Ø‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø cleanup function ‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶¨‡¶π‡¶æ‡¶∞‡¶á ‡¶ï‡¶∞‡¶ø‡¶®‡¶ø ‡¶ï‡¶ñ‡¶®‡ßã useEffect ‡¶π‡ßÅ‡¶ï‡ßá‡•§
‡¶è‡¶á cleanup function ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶§‡¶ñ‡¶®‡¶á ‡¶¨‡ßç‡¶Ø‡¶æ‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶ø ‡¶Ø‡¶ñ‡¶® ‡¶è‡¶Æ‡¶® ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶Ü‡¶Æ‡¶∞‡¶æ useEffect ‡¶π‡ßÅ‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶ø ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ‡¶§‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® 
(((notun kore useEffect ta call howar age
..I mean component ta unmount hole..ek e kotha----cz unmount holei pore abar mount hole useeffect abar call hobe)))‡•§ 
‡¶®‡¶æ‡¶π‡¶≤‡ßá ‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø ‡¶≤‡¶ø‡¶ï‡ßá‡¶ú ‡¶™‡ßç‡¶∞‡¶¨‡¶≤‡ßá‡¶Æ ‡¶π‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º‡•§


‡¶Ø‡ßá‡¶Æ‡¶® ‡ß®‡¶ü‡¶æ ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶® ‡¶π‡¶≤‡ßã:
1.
useEffect(() => {
 const intervalId = setInterval(() => {
 console.log("Tick...");
 }, 1000);

 // Cleanup function
 return () => {
 clearInterval(intervalId); // ‚õî stop the interval
 console.log("Interval cleared");
 };
}, []);
‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶Æ‡¶∞‡¶æ Cleanup function ‡¶®‡¶æ ‡¶¶‡ßá‡¶á, component ‡¶ü‡¶æ ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶≤‡ßá‡¶ì Interval ‡¶ö‡¶≤‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§ 

2.
useEffect(() => {
 const handleResize = () => {
 console.log("resized!");
 };

 window.addEventListener("resize", handleResize);

 return () => {
 window.removeEventListener("resize", handleResize);
 console.log("Removed listener");
 };
}, []);
‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶Æ‡¶∞‡¶æ cleanup function ‡¶®‡¶æ ‡¶¶‡ßá‡¶á ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ø‡¶ñ‡¶®‡¶á component mount(again useeffect) ‡¶π‡¶¨‡ßá  ‡¶§‡¶ñ‡¶®‡¶á ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ EventListener ‡¶§‡ßà‡¶∞‡ßÄ ‡¶π‡¶¨‡ßá‡•§‡¶è‡¶≠‡¶æ‡¶¨‡ßá‡¶á ‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø ‡¶≤‡¶ø‡¶ï ‡¶π‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶ì ‡¶≤‡¶∏ ‡¶π‡¶¨‡ßá‡•§ 

‡¶è‡¶§‡¶¶‡¶ø‡¶® ‡¶Ø‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá cleanup function ‡¶õ‡¶æ‡¶°‡¶º‡¶æ API fetch ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶∏‡¶≤‡¶æ‡¶Æ ‡¶è‡¶á ‡¶π‡ßÅ‡¶ï ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø ‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø ‡¶≤‡¶ø‡¶ï‡ßá‡¶ú ‡¶π‡¶ö‡ßç‡¶õ‡¶ø‡¶≤‡ßã???
‡¶®‡¶æ‡¶πü§£‡•§ fetch ‡¶Æ‡ßÇ‡¶≤‡¶§ ‡¶è‡¶ï‡¶ü‡¶æ one time ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶§‡¶æ‡¶á ‡¶è‡¶ü‡¶æ‡¶ï‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ‡¶ì ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶®‡ßá‡¶á‡•§ ‡¶è‡¶ü‡¶æ‡¶§‡ßá ‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶á‡¶∏‡ßç‡¶Ø‡ßÅ‡¶ü‡¶æ‡¶á ‡¶Ü‡¶∏‡¶¨‡ßá ‡¶®‡¶æ‡¶π ‡¶¨‡¶≤‡ßá ‡¶è‡¶§‡¶¶‡¶ø‡¶® API fetching ‡¶ï‡¶∞‡ßá‡¶ì ‡¶¨‡ßá‡¶Å‡¶ö‡ßá ‡¶ó‡ßá‡¶õ‡¶øüòì‡•§ 
////// kintu multiple time fetch to call hoite pare..tokhon abar memory leak hoitr pare jodi ager api call ta sesh 
        na kore new call ashe...search box e word suggestion er kaj ta....tokhn to useeffect ta ber ber call hoy
        tai ager ta delete korar jnno clean up use hobe...and eta most used critical fact for fetch////////////////
